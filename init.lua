
local exports = {
  name = "configgenerator",
  version = "1.0.0",
  description = "Config Generator",
  author = { name = "Jake Wilson" }
}

local configgenerator = exports

function configgenerator.startplugin()

  emu.register_start(function()

    -- If no rom is loaded, don't do anything
    if emu.romname() == "___empty" then
      return
    end

    local inputs = ""
    local ioport = manager.machine.ioport
    local input = manager.machine.input

    -- Iterate through all ports and their fields, generating input tags for .cfg output
    for port_name, port in pairs(ioport.ports) do
      for field_name, field in pairs(port.fields) do
        local token = ioport:input_type_to_token(field.type, field.player)

        -- Add to output only if it's a controller or misc type
        if (field.type_class == "controller" or field.type_class == 'misc' or field.type_class == 'dipswitch') then

          -- Build the input tag
          local comment = '            <!-- ' .. field.name .. ' -->\n'
          inputs = inputs .. comment .. '            <port tag="' .. port_name .. '" type="' .. token .. '" mask="' .. field.mask .. '" defvalue="' .. field.defvalue

          -- If it's a dipswitch, add the current value
          if field.type_class == 'dipswitch' then
            inputs = inputs .. '" value="' .. field.user_value
          end

          inputs = inputs ..'">'

          -- Add the input sequence tokens
          local sequence = field:input_seq()
          if sequence.empty == false then
            inputs = inputs .. '\n                <newseq type="standard">\n'
            inputs = inputs .. '                    ' .. input:seq_to_tokens(sequence) .. '\n'
            inputs = inputs .. '                </newseq>\n            '
          end

          inputs = inputs .. '</port>\n'
        end
      end
    end

    -- .cfg header and footer
    local header = '<?xml version="1.0"?>\n<!-- This file is autogenerated; comments and unknown tags will be stripped -->\n<mameconfig version="10">\n    <system name="mk2">\n        <input>\n'
    local footer = '        </input>\n    </system>\n</mameconfig>\n'

    -- Get attributes of the output directory
    local path = "cfg_generated"
    local attr = lfs.attributes(path)

    -- Check if output directory already exists but is not a directory
    if (attr and attr.mode ~= "directory") then
      emu.print_verbose("configgenerator: output path exists but isn't directory " .. path)
      manager.machine.exit()
    end

    -- Path doesn't exist yet, create it
    if not attr then
      lfs.mkdir(path)

      -- Check that path was created
      if not lfs.attributes(path) then
        emu.print_verbose("configgenerator: unable to create path " .. path)
        manager.machine.exit()
      end
    end

    -- Write output file
    local file = io.open(path .. "/" .. emu.romname() .. ".cfg", "w")
    file:write(header .. inputs .. footer)
    file:close()

    -- manager.machine:exit()
  end)
end

return exports
